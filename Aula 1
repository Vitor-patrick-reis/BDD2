
--- Aula 01 de banco de dados criação de uma empresa e seus dados ----

-----------------------------
        -- AULA 1
-----------------------------

-- CRIA O BANCO DE DADOS
CREATE DATABASE EMPRESACJ3029352; 
GO

-- HABILITA O CONTEXTO
USE EMPRESACJ3029352;
GO

-- CRIA A TABELA FUNCIONARIOS   
CREATE TABLE FUNCIONARIOS (
ID INT PRIMARY KEY, --CHAVE PRIMARIA
NOME VARCHAR(25) NOT NULL,
SEXO CHAR(1) NULL,
ADMISSAO DATE NOT NULL,
SALARIO DECIMAL(10,2) NOT NULL
);
GO

--------------------------------------
	-- INSERÇÃO DOS DADOS
--------------------------------------

-- ALTERAR O FORMATO DE DATA DO SQL SERVER
SET DATEFORMAT DMY; -- DATA, MES, ANO
GO

-- INSERE DADOS NA TABELA FUNCIONARIOS
INSERT INTO FUNCIONARIOS (
ID,
NOME,
SEXO,
ADMISSAO,
SALARIO)
VALUES (1, 'MARIA DA SILVA', 'F', '10/01/2018', 2500.00);
GO

INSERT INTO FUNCIONARIOS 
VALUES (2, 'PEDRO PEREIRA', 'M', '25/05/2015', 990.00);
GO

-- INSERINDO DOIS NOVOS REGISTROS: SINTAXE 1
INSERT INTO FUNCIONARIOS
VALUES (3, 'GLEYCI REVOREDO', 'F', '19/02/2002', 3800.00);

INSERT INTO FUNCIONARIOS
VALUES (4, 'VITOR PATRICK', 'M', '19/08/2001', 3200.00);
GO

-- INSERINDO NOVOS REGISTROS: SINTAXA 2
INSERT INTO FUNCIONARIOS VALUES
(5, 'MARCELO AUGUSTO', 'M', '09/12/2017', 1900.00),
(6, 'PEDRO SILVA', 'M', '15/1/2015', 1200.00),
(7, 'MONICA DA SILVA', 'F', '09/12/2017', 1900.00),
(8, 'THIAGO LIMA', 'M', '09/12/2017', 1900.00);
GO

-- EXIBE ALGUMAS INFORMAÇOES DOS FUNCIONARIOS, UTILIZANDO  ALIASES PARA ALGUMAS COLUNAS --
SELECT ID AS 'CÓDIGO DO FUNCIONARIO',
	   NOME,
	   SEXO,
	   SALARIO AS 'SALARIO'
FROM FUNCIONARIOS;
GO

-- EXIBE TODOS OS REGRISTROS DA TABELA FUNCIONARIOS
SELECT * FROM FUNCIONARIOS;
GO

-- UTILIZA TOP PARA EXIBIR SOMENTE OS 3 PRIMEIROS REGISTROS DA TABELA
SELECT TOP 3 * FROM FUNCIONARIOS;
GO

-- EXIBE SOMENTE O ID E O NOME DO FUNCIONARIO
SELECT TOP 3 
	ID, 
	NOME
FROM FUNCIONARIOS;
GO

-- EXIBE AS INFORMAÇOES DE TOOS OS FUNCIONARIOS MASCULINOS, CUJO SALARIO É MAIOR DO QUE 1000 REAIS
SELECT * FROM FUNCIONARIOS
WHERE SEXO = 'M' AND 
	  SALARIO > 1000;
GO

-- SELECIONA  TODOS OS FUNCIONARIOS, ORDENANDO O RESULTADO EM ORDEM ALFABETICA(A-Z)
SELECT * FROM FUNCIONARIOS 
ORDER BY NOME;
GO

-- SELECIONA  TODOS OS FUNCIONARIOS, ORDENANDO O RESULTADO EM ORDEM ALFABETICA(Z-A) USANDO O DESC "DECRESENTE"
SELECT * FROM FUNCIONARIOS 
ORDER BY NOME DESC;
GO

-- INSERINDO DOIS NOVOS FUNCIONARIOS OBSERVANDO QUE OS NOMES SÃO IGUAL
INSERT INTO FUNCIONARIOS VALUES
	(9, 'MARIA DA SILVA', 'F', '21/09/2012', 1700.00),
	(10, 'MARIA DA SILVA', 'F', '10/10/2017', 1400.00)
GO

-- SELECIONA OS REGISTROS DE TODOS OS FUNCIONARIOS ORDENANDO PELO NOME EM ORDEM ALFABETICA (A-Z)
-- SEGUINDO PELOS REGISTROS DOS FUNCIONARIOS QUE TEM O MAIOR SALARIO 
-- EXIBE SOMENTE OS REGISTROS DOS FUNCIONARIOS CUJO SALARIO SEJA MENOR DO QUE 3000 REAIS.
SELECT * FROM FUNCIONARIOS
WHERE SALARIO < 3000
ORDER BY NOME,
		 SALARIO DESC;
GO

-- CRIAÇÃO DE UMA TABELA PARA TESTE
CREATE TABLE TESTE(
	ID INT,
	NOME CHAR(10)
);
GO

-- EXIBE INFORMAÇOES SOBRE A ESTRUTURA DA TABELA
EXEC sp_columns TESTE;
GO

-- OUTRA FORMA DE EXIBIR INFORMAÇÕES SOBRE A ESTRUTURA DA TABELA
SELECT *
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'TESTE';
GO

-- EXIBE INFORMAÇOES ESPECIFICAS SOBRE A ESTRUTURA DA TABELA
SELECT TABLE_CATALOG        AS 'BANCO DE DADOS',
	   TABLE_NAME	    AS 'TABELA',
	   ORDINAL_POSITION AS 'POSIÇÃO',
	   COLUMN_NAME      AS 'COLUNA',
	   DATA_TYPE        AS 'TIPO DE DADOS',
	   COLLATION_NAME   AS 'IDIOMA DA COLUNA',
	   IS_NULLABLE      AS 'ACEITA NULO'
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'TESTE';
GO

-- ALTERA O TIPO DE DADOS DA COLUNA NOME, NO CASOO AUMENTA O TAMANHO DO CORPO
ALTER TABLE TESTE
	ALTER COLUMN NOME CHAR(50);
GO

-- ADICIONA A COLUNA SEXO
ALTER TABLE TESTE
	ADD SEXO CHAR(1) NULL;
GO

-- ADICIONA AS COLUNAS DATA DE NASCI,EMTO E PESO
ALTER TABLE TESTE 
	ADD DATANASCIMENTO DATE,
		PESO DECIMAL(5,2);
GO

-- REMOVE A COLUNA DATANASCIMENTO
ALTER TABLE TESTE
	DROP COLUMN DATANASCIMENTO;
GO

-- ADICIONAR UMA RESTRIÇÃO NÃO NOMEADA, DO TIPO UNICA, NA COLUNA SEXO
ALTER TABLE TESTE
	ADD UNIQUE (SEXO);
GO

-- ALTERA A COLUNA ID, INDICANDO QUE ELA NÃO PODE SER NULA.
ALTER TABLE TESTE
	ALTER COLUMN ID INT NOT NULL;
GO

-- ADICIONAR UMA RESTRIÇÃO NOMEADA, DO TIPO CHAVE PRIMARIA, NA COLUNA ID.
ALTER TABLE TESTE
	ADD CONSTRAINT PK_ID PRIMARY KEY (ID);
GO

-- EXIBE INFORMAÇÕES SOBRE AS RESTRIÇÕES QUE EXITEM NA TABELA
EXEC sp_helpconstraint TESTE;
GO

-- EXIBE INFORMAÇOES SOBRE AS RESTRIÇOES DA TABELA
SELECT CONSTRAINT_CATALOG     AS 'BANCO DE DADOS',
	   TABLE_NAME         AS 'TABELA',
	   CONSTRAINT_TYPE    AS 'TIPO DE RESTRIÇÕES',
	   CONSTRAINT_NAME    AS 'IDIOMA DA COLUNA'
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
WHERE TABLE_NAME = 'TESTE';
GO

-- REMOVENDO UMA RESTRIÇÃO NOMEADA
ALTER TABLE TESTE
	DROP CONSTRAINT PK_ID;
GO

-- EXCLUI A TABELA TESTE
DROP TABLE TESTE;
GO

-- TENTA SELECIONAR OS DADOS DA TABELA
SELECT * FROM TESTE;
GO

-- CRIA A TABELA CLIENTES
CREATE TABLE CLIENTES (
	ID INT PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL,
	SEXO CHAR(1) NULL,
	IDADE INT CHECK (IDADE > 18) NOT NULL,
	CPF CHAR(11) UNIQUE NOT NULL,
	EMAIL VARCHAR(200) DEFAULT 'MEU@EMAIL.COM'
NOT NULL
);
GO

-- UTILIZANDO O COMANDO SP_HELP
EXEC sp_help 'CLIENTES';
GO

-- CRIA UMA TABELA TEMPORARIA LOCAL, DENOMINADA TABELAa
CREATE TABLE #TABELAa ( --
	ID INT NOT NULL,
	NOME VARCHAR(25) NOT NULL,
	SEXO CHAR(1) NULL,
	PRIMARY KEY (ID)
);
GO

-- INSERINDO DADOS NA #TABELAa
INSERT INTO  #TABELAa VALUES
	(1, 'MARCOS VINICIOS', 'M'),
	(2, 'JULIA MARCIA', 'F');
GO

-- EXIBE OS REGISTROS AMARZENADO NA #TABELAa LOCA
SELECT * FROM #TABELAa;
GO

-- CRIA UMA TABELA TEMPORARIA GLOBAL, DENOMINADA TABELAb
CREATE TABLE ##TABELAb ( 
	ID INT NOT NULL,
	NOME VARCHAR(25) NOT NULL,
	SEXO CHAR(1) NULL,
	PRIMARY KEY (ID)
);
GO

-- INSERINDO ALGUNS VALORES NA TABELA TEMPORARIA GLOBAL
INSERT INTO  ##TABELAb VALUES
	(1, 'MARCO VINICIOS', 'M'),
	(2, 'JULIA MARCIA', 'F');
GO

-- EXIBE OS REGISTROS AMARZENADO NA TABELA GLOBAL
SELECT * FROM ##TABELAb;
GO

-- COPIA ALGUMAS COLUNAS DE ALGUNS REGISTROS ARMAZENADOS NA TABELA FUNCIONARIO, PARA DENTRO DA TABELA TEMPORARIO LOCAL #TABELAa
INSERT INTO #TABELAa
	SELECT ID,
		   NOME,
		   SEXO
FROM FUNCIONARIOS
WHERE ID > 2;
GO

-- EXIBE INFORMAÇOES SOBRE AS RESTRIÇOES DA TABELA LOCAL
SELECT CONSTRAINT_CATALOG     AS 'BANCO DE DADOS',
	   TABLE_NAME         AS 'TABELA',
	   CONSTRAINT_TYPE    AS 'TIPO DE RESTRIÇÕES',
	   CONSTRAINT_NAME    AS 'NOME DA RESTRIÇÃO'
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
WHERE TABLE_NAME LIKE '#TABELAa%';
GO

-- CRIA UMA NOVA TABELA, UTILIZANDO COMO BASE OS DADOS E A ESTRUTURA DA TABELA FUNCIONARIOS
-- SERA CRIADO A TABELA FUNCIONARIOSCOPIA
SELECT *
	INTO FUNCIONARIOSCOPIA
FROM FUNCIONARIOS;
GO

-- EXIBE A TABELA FUNCIONARIOSCOPIA
SELECT * FROM FUNCIONARIOSCOPIA;
GO

-- EXIBE INFORMAÇOES ESPECIFICAS SOBRE A ESTRUTURA DA TABELA FUNCIONARIOSCOPIA
SELECT TABLE_CATALOG         AS 'BANCO DE DADOS',
	   TABLE_NAME	     AS 'TABELA',
	   ORDINAL_POSITION  AS 'POSIÇÃO',
	   COLUMN_NAME       AS 'COLUNA',
	   DATA_TYPE         AS 'TIPO DE DADOS',
	   COLLATION_NAME    AS 'IDIOMA DA COLUNA',
	   IS_NULLABLE       AS 'ACEITA NULO'
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'FUNCIONARIOSCOPIA';
GO

-- EXIBE INFORMAÇOES SOBRE AS RESTRIÇOES DA TABELA FUNCIONARIOSCOPIA
SELECT CONSTRAINT_CATALOG     AS 'BANCO DE DADOS',
	   TABLE_NAME         AS 'TABELA',
	   CONSTRAINT_TYPE    AS 'TIPO DE RESTRIÇÕES',
	   CONSTRAINT_NAME    AS 'NOME DA RESTRIÇÃO'
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
WHERE TABLE_NAME IN ('FUNCIONARIOS', 'FUNCIONARIOSCOPIA');
GO

-- ADICIONA RESTRIÇOES NOMEADAS DO TIPO CHAVE PRIMARIA, NA COLUNA ID
ALTER TABLE FUNCIONARIOSCOPIA
	ADD CONSTRAINT PK_ID PRIMARY KEY (ID);
GO

-- EXIBE A DATA DE CRIAÇÃO E O NOME DAS TABELAS EXISTENTES NO BANCO DE DADOS EM USO NO MOMENTO
SELECT CREATE_DATE AS 'DATA DA CRIAÇÃO',
    NAME           AS 'NOME DA TABELA'
FROM SYS.TABLES;
GO











