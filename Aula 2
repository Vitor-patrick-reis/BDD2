--- Aula 02 -----

-- HABILITA O CONTEXTO
USE EMPRESACJ3029352;
GO

-- EXIBE A DATA DE CRIAÇÃO E O NOME DAS TABELAS EXISTENTES NO BANCO EM USO NO MOMENTO
SELECT CREATE_DATE  AS 'DATA DE CRIAÇÃO',
		NAME		AS 'NOME DA TABELA'
FROM SYS.TABLES;
GO

-- ADICIONAR O CAMPO TELEFONE, NA TABELA FUNCIONARIOS
ALTER TABLE FUNCIONARIOS
	ADD TELEFONE CHAR(10)
GO

-- EXIBE TODOS OS REGISTROS DA TABELA FUNCIONARIOS
SELECT * FROM FUNCIONARIOS;
GO

-- EXIBE INFORMAÇOES ESPECIFICAS SOBRE A ESTRUTURA DA TABELA
SELECT TABLE_CATALOG    AS 'BANCO DE DADOS',
	   TABLE_NAME	    AS 'TABELA',
	   ORDINAL_POSITION AS 'POSIÇÃO',
	   COLUMN_NAME      AS 'COLUNA',
	   DATA_TYPE        AS 'TIPO DE DADOS',
	   COLLATION_NAME   AS 'IDIOMA DA COLUNA',
	   IS_NULLABLE      AS 'ACEITA NULO?'
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'FUNCIONARIOS';
GO

-- ATUALIZA O TELEFONE DE TODOS OS FUNCIONARIOS DE UMA VEZ
-- SINTAXE ERRADA
UPDATE FUNCIONARIOS	
	SET TELEFONE = '3668-0010';
GO

-- ATUALIZA O TELEFONE DE TODOS OS FUNCIONARIOS PARA NULL OU SEJA VOLTO COMO ESTAVA.
UPDATE FUNCIONARIOS	
	SET TELEFONE = NULL;
GO

-- ATUALIZA O TELEFONE APENAS DO ID 1, SINTAXE CORRETA
UPDATE FUNCIONARIOS	
	SET TELEFONE = '1111-1111'
	WHERE ID = 1;
GO

-- ATUALIZA O TELEFONE APENAS DO ID 2, SINTAXE CORRETA
UPDATE FUNCIONARIOS	
	SET TELEFONE = '2222-2222'
	WHERE ID = 2; --WHERE É USADO PARA SELECIONAR O ID OU QUALQUER OUTRO ATRIBUTO ESPECIFICO.
GO

-- ATUALIZA DOS DEMAIS FUNCIONARIOS USANDO O WHERE.
UPDATE FUNCIONARIOS	SET TELEFONE =	      NULL WHERE ID = 3;
UPDATE FUNCIONARIOS	SET TELEFONE = '4444-4444' WHERE ID = 4;
UPDATE FUNCIONARIOS	SET TELEFONE = '5555-5555' WHERE ID = 5;
UPDATE FUNCIONARIOS	SET TELEFONE =	      NULL WHERE ID = 6;
UPDATE FUNCIONARIOS	SET TELEFONE = '7777-7777' WHERE ID = 7;
UPDATE FUNCIONARIOS	SET TELEFONE =		  NULL WHERE ID = 8;
UPDATE FUNCIONARIOS	SET TELEFONE = '9999-9999' WHERE ID = 9;
UPDATE FUNCIONARIOS	SET TELEFONE = '1010-1010' WHERE ID = 10;
GO

-- EXIBE TODOS OS REGISTROS DA TABELA FUNCIONARIOS
SELECT * FROM FUNCIONARIOS;
GO

-- CONCEDE UM AUMENTO DE 10% PARA OS FUNCIONARIOS QUE FORAM ADMITIDOS ANTES DE 2016
UPDATE FUNCIONARIOS	
	SET SALARIO  = SALARIO * 1.10
	WHERE YEAR (ADMISSAO) < 2016;
GO

-- EXIBE TODOS OS REGISTROS DA TABELA FUNCIONARIOSCOPIA
SELECT * FROM FUNCIONARIOSCOPIA;
GO

-- REMOVE OS FUNCIONARIOS DA TABELA FUNCIONARIOS, O CONTEUDO DA TABELA
-- CUJO O SALARIO SEJA MENOR DO QUE R$ 1500,00.
DELETE FROM FUNCIONARIOSCOPIA
WHERE SALARIO < 1500;
GO

-- EXIBE TODOS OS REGISTROS DA TABELA FUNCIONARIOSCOPIA
SELECT * FROM FUNCIONARIOSCOPIA;
GO

-- UTILIZA O COMANDO TRUNCATE PARA REMOVER OS REGISTROS DA TABELA FUNCIONARIOSCOPIA, O CONTEUDO DA TABELA
-- O TRUNCATE ELE APAGA DE VEZ E NÃO TEM COMO SELECIONAR COM O WHERE
TRUNCATE TABLE FUNCIONARIOSCOPIA;
GO

-- EXCLUI A TABELA FUNCIONARIOSCOPIA
DROP TABLE FUNCIONARIOSCOPIA;
GO

-- EXIBE A DATA DE CRIAÇÃO E O NOME DAS TABELAS EXISTENTES NO BANCO EM USO NO MOMENTO
SELECT CREATE_DATE  AS 'DATA DE CRIAÇÃO',
		NAME		AS 'NOME DA TABELA'
FROM SYS.TABLES;
GO

-- EXIBE TODOS OS REGISTROS DA TABELA FUNCIONARIOS
SELECT * FROM FUNCIONARIOS;
GO

--- OPERADOR LOGICO DIFERENTE <>, != -----

-- UTILIZA O OPERADOR DE COMPARAÇÃO <>, PARA EXIBIR OS DADOS DOS FUNCIONARIOS CUJO O SEXO SEJA DIFERENTE DE 'M'.
SELECT * FROM FUNCIONARIOS
WHERE SEXO <> 'M';
GO

-- UTILIZA O OPERADOR DE COMPARAÇÃO != PARA EXIBIR OS DADOS DOS FUNCIONARIOS CUJO O SEXO SEJA DIFERENTE DE 'M'.
SELECT * FROM FUNCIONARIOS
WHERE SEXO != 'M';
GO

--- OPERADOR LOGICO NOT -----

-- UTILIZA O OPERADOR NOT, PARA EXIBIR OS DADOS DOS FUNCIONARIOS CUJO O SEXO SEJA DIFERENTE DE 'M'.
SELECT * FROM FUNCIONARIOS
WHERE NOT SEXO = 'M';
GO

-- UTILIZA O OPERADOR >=, AND, E <= PARA EXIBIR OS REGISTROS DOS FUNCIONARIOS
-- CUJO O SALARIO ESTEJA ENTRE 1000 E 1800 REAIS
SELECT * FROM FUNCIONARIOS
WHERE SALARIO >= 1000 AND
	  SALARIO <= 1800;
GO

-- UTILIZANDO O OPERADOR BETWEEN PARA EXIBIR OS RESGISTROS DOS FUNCIONARIOS
-- CUJO O SALARIO ESTEJA ENTRE 1000 E 1800 REAIS
SELECT * FROM FUNCIONARIOS
WHERE SALARIO BETWEEN 1000 AND 1800;
GO

-- UTILIZANDO O OPERADOR IS NULL PARA EXIBIR OS REGISTROS DOS FUNCIONARIOS QUE NÃO POSSUEM 
-- O TELEFONE CADASTRADO, QUE TEM NULL.
SELECT * FROM FUNCIONARIOS
WHERE TELEFONE IS NULL;
GO

-- UTILIZANDO O OPERADOR IS NOT NULL PARA EXIBIR OS REGISTROS DOS FUNCIONARIOS QUE POSSUEM 
-- O TELEFONE CADASTRADO, QUE NÃO TEM NULL.
SELECT * FROM FUNCIONARIOS
WHERE TELEFONE IS NOT NULL;
GO

-- OPERADOR EXISTS USADO PARA VERIFICAR SE EXISTE ALGUM FUNCIONARIO QUE RECEBA ACIMA DE R$ 2000,00
IF EXISTS (
	SELECT * FROM FUNCIONARIOS
	WHERE SALARIO > 2000
)
	PRINT 'ALGUEM RECEBE ACIMA DE R$ 2000';
ELSE
	PRINT 'NINGUEM RECEBE ACIMA DE R$ 2000';
GO

-- OPERADOR OR EXIBE OS REGISTROS DOS FUNCIONARIOS CUJO ID SEJA 1, 2 OU 5
SELECT * FROM FUNCIONARIOS
WHERE ID = 1 OR
	  ID = 2 OR
	  ID = 5;
GO

-- OPERADOR IN EXIBE OS REGISTROS DOS FUNCIONARIOS CUJO ID SEJA 1, 2 OU 5
-- É IGUAL O OR POREM ELE FAZ UMA SELEÇÃO SIMPLIFICADA.
SELECT * FROM FUNCIONARIOS
WHERE ID IN (1, 2, 5);
GO

-- UTILIZANDO UMA SUBCONSULTA, PARA RETORNAR OS VALORES DA CLAUSULA IN.
SELECT * FROM FUNCIONARIOS
WHERE SALARIO IN (
	SELECT SALARIO
	FROM FUNCIONARIOS
	WHERE SALARIO > 2000
);
GO

-- OPERADOR LIKE UTILIZADO PARA VERIFICAR E COMPARAR SEQUENCIA DE CARACTERE
-- EXIBE TODOS OS CUJOS NOME COMEÇA COM A LETRA "M".
SELECT * FROM FUNCIONARIOS
WHERE NOME LIKE 'M%';
GO

-- EXIBE OS REGISTROS DE TODOS OS FUNCIONARIOS CUJO NOME CONTENHA 'SILVA' UTILIAZANDO A FUNÇÃO
-- UPPER(), PARA CONVERTER O NOME PARA MAIUSCULO, ORDENANDO O RESULTADO DE ACORDO COM O NOME.
SELECT * FROM FUNCIONARIOS
WHERE UPPER(NOME) LIKE '%SILVA%'
ORDER BY NOME;
GO

-- EXIBE OS REGISTROS DE TODOS OS FUNCIONARIOS CUJO NOME NÃO COMECE COM A LETRA 'M'
-- ORDENA O RESULTADO DE ACORDO COM O NOME
SELECT * FROM FUNCIONARIOS
WHERE NOME LIKE '[^M]%'
ORDER BY NOME;
GO

-- CRIA UM VIEW QUE EXIBE ALGUMAS INFORMAÇOES DOS FUNCIONARIOS, UTILIZANDO ALIASES PARA ALGUMAS COLUNAS
CREATE VIEW MAIORESSALARIOS AS
 SELECT ID AS 'CODIGO DO FUNCIONARIO',
		NOME,
		SEXO,
		SALARIO AS 'SALARIO'
 FROM FUNCIONARIOS; 
GO

-- EXEMPLOS DE UTILIZAÇÃO NA VIEW MAIORESSALARIOS
SELECT * FROM MAIORESSALARIOS;
GO

SELECT [CODIGO DO FUNCIONARIO],
	   NOME,
	   SALARIO
FROM MAIORESSALARIOS;
GO

-- EXEMPLO  DE ATUALIZAÇÃO DA VIEW MAIORESSALARIOS
ALTER VIEW MAIORESSALARIOS AS 
	SELECT ID AS 'CODIGO DO FUNCIONARIO',
	       NOME,
		   SEXO AS 'SEXO DO FUNCIONARIO',
		   SALARIO AS 'SALARIO'
		FROM FUNCIONARIOS
		ORDER BY SALARIO DESC
		OFFSET 0 ROWS;
	GO

-- EXEMPLO DE UTILIZAÇÃO DA VIEW MAIORESSALARIOS EXIBE SOMENTE OS REGISTROS CUJO SALARIO ESTEJA
-- ACIMA DE R$ 1500,00
SELECT [CODIGO DO FUNCIONARIO],
	   NOME,
       'SEXO DO FUNCIONARIO',
	   SALARIO
FROM MAIORESSALARIOS
WHERE SALARIO > 1500;
GO

-- EXIBE INFORMAÇOES SOBRE AS VIEWS
EXEC SP_HELPTEXT MAIORESSALARIOS;
GO

SELECT TABLE_NAME	AS 'NOME DA VIEW',
	   VIEW_DEFINITION AS 'CODIGO SQL'
FROM INFORMATION_SCHEMA.VIEWS;
GO

-- EXCLUI A VIEW MAIORESSALARIOS
DROP VIEW MAIORESSALARIOS;
GO


